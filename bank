<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UAMBANK - Sistema Bancário Premium</title>
    <style>
        /* Estilos de Desktop */
        body {
            font-family: 'Arial', sans-serif;
            background-color: #0a1f44; /* Azul marinho escuro */
            color: #f5f5f5; /* Texto branco */
            margin: 0;
            padding: 0;
            display: block;
        }

        /* Container principal para Desktop */
        #container {
            display: flex;
            width: 100%;
            height: 100vh;
        }

        /* Sidebar para navegação */
        #sidebar {
            width: 250px;
            background-color: #1c2b4c; /* Caixa azul mais clara */
            padding: 20px;
            box-shadow: 0px 8px 20px rgba(0, 0, 0, 0.6); /* Sombra premium */
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
        }

        #sidebar h1 {
            color: #f5b041;
            font-size: 24px;
            margin-bottom: 20px;
        }

        .sidebar-button {
            background-color: #f5b041;
            color: #0a1f44;
            padding: 12px;
            border-radius: 6px;
            margin-bottom: 10px;
            cursor: pointer;
            text-align: center;
        }

        .sidebar-button:hover {
            background-color: #f7c55f;
        }

        /* Conteúdo principal */
        #content {
            flex-grow: 1;
            padding: 40px;
            background-color: #1c2b4c;
        }

        #content h2 {
            color: #f5f5f5;
            font-size: 28px;
            margin-bottom: 20px;
        }

        input, button, select {
            width: 100%;
            padding: 12px;
            margin: 10px 0;
            border: 1px solid #bfbfbf;
            border-radius: 8px;
            font-size: 16px;
            background-color: #2c3e5e; /* Fundo escuro para inputs */
            color: #f5f5f5; /* Texto branco */
        }

        button {
            background: linear-gradient(145deg, #d9d9d9, #a6a6a6); /* Prata cromado */
            color: #333333; /* Texto escuro para contraste */
            cursor: pointer;
            transition: 0.3s ease;
        }

        button:hover {
            background: linear-gradient(145deg, #e6e6e6, #b3b3b3); /* Efeito prata mais claro ao hover */
        }

        #balanceBar {
            width: 100%;
            height: 20px;
            background-color: #2c3e5e; /* Fundo escuro para barra */
            border-radius: 10px;
            margin: 20px 0;
            overflow: hidden;
            box-shadow: inset 0px 2px 5px rgba(0, 0, 0, 0.1);
        }

        #progress {
            height: 100%;
            background-color: #f5b041; /* Dourado para a barra de progresso */
            width: 50%; /* Ajustar dinamicamente */
        }

        /* Estilo do extrato e outros detalhes */
        #extratoList {
            text-align: left;
            margin-top: 20px;
        }

        .extrato-item {
            margin-bottom: 10px;
            padding: 10px;
            background-color: #2c3e5e;
            border-radius: 6px;
        }

        .extrato-item p {
            margin: 5px 0;
        }

        /* Estilo dos gráficos */
        #chartSection {
            margin-top: 30px;
        }

        /* Responsividade: Ajustes para telas menores */
        @media (max-width: 1200px) {
            #sidebar {
                width: 200px;
            }

            #content {
                padding: 20px;
            }

            .sidebar-button {
                padding: 10px;
            }

            input, button, select {
                padding: 10px;
                font-size: 14px;
            }
        }
    </style>
</head>
<body>

    <div id="container">
        <!-- Sidebar de navegação -->
        <div id="sidebar">
            <h1>UAMBANK</h1>
            <div class="sidebar-button" id="goToRegister">Cadastrar</div>
            <div class="sidebar-button" id="goToLogin">Entrar</div>
            <div class="sidebar-button" id="goToBank">Banco</div>
            <div class="sidebar-button" id="goToProfile">Perfil</div>
            <div class="sidebar-button" id="goToInvestments">Investimentos</div>
            <div class="sidebar-button" id="goToTransfers">Transferências</div>
            <div class="sidebar-button" id="goToPayments">Pagamentos</div>
            <div class="sidebar-button" id="goToExtrato">Extrato</div>
            <div class="sidebar-button" id="goToChat">Chat</div>
            <div class="sidebar-button" id="goToHelp">Ajuda</div>
            <div class="sidebar-button" id="logoutButton">Sair</div>
        </div>

        <!-- Conteúdo principal -->
        <div id="content">
            <!-- Seção de cadastro -->
            <div id="registerSection">
                <h2>Cadastro</h2>
                <input type="text" id="registerName" placeholder="Nome" required>
                <input type="text" id="registerCpf" placeholder="CPF" required>
                <input type="password" id="registerPassword" placeholder="Senha" required>
                <button id="registerUser">Cadastrar</button>
            </div>

            <!-- Seção de login -->
            <div id="loginSection" class="hidden">
                <h2>Entrar</h2>
                <input type="text" id="loginCpf" placeholder="CPF" required>
                <input type="password" id="loginPassword" placeholder="Senha" required>
                <button id="loginUser">Entrar</button>
            </div>

            <!-- Seção do banco -->
            <div id="bankSection" class="hidden">
                <h2>Bem-vindo(a), <span id="userName"></span>!</h2>
                <p>Agência: <span id="userAgencia"></span></p>
                <p>Conta: <span id="userConta"></span></p>
                <p>Saldo: R$ <span id="userSaldo"></span></p>
                <div id="balanceBar">
                    <div id="progress"></div>
                </div>
                <button id="depositButton">Depositar</button>
                <button id="pixButton">PIX</button>
                <button id="transferButton">Transferir</button>
                <button id="investmentButton">Investir</button>
            </div>

            <!-- Seção de extrato -->
            <div id="extratoSection" class="hidden">
                <h2>Extrato Detalhado</h2>
                <div id="extratoList"></div>
            </div>

            <!-- Seção de perfil -->
            <div id="profileSection" class="hidden">
                <h2>Meu Perfil</h2>
                <p><strong>Nome:</strong> <span id="profileName"></span></p>
                <p><strong>CPF:</strong> <span id="profileCpf"></span></p>
                <p><strong>Agência:</strong> <span id="profileAgencia"></span></p>
                <p><strong>Conta:</strong> <span id="profileConta"></span></p>
            </div>

            <!-- Seção de investimentos -->
            <div id="investmentSection" class="hidden">
                <h2>Investimentos</h2>
                <select id="investmentType">
                    <option value="cdb">CDB - 10% ao ano</option>
                    <option value="poupanca">Poupança - 6% ao ano</option>
                    <option value="acoes">Ações - 12% ao ano</option>
                </select>
                <input type="number" id="investmentAmount" placeholder="Valor a investir">
                <button id="investButton">Investir</button>
            </div>

            <!-- Seção de transferências -->
            <div id="transferSection" class="hidden">
                <h2>Transferência</h2>
                <input type="text" id="transferCpf

                <input type="text" id="transferCpf" placeholder="CPF do destinatário" required>
                <input type="number" id="transferValor" placeholder="Valor da transferência" required>
                <button id="sendTransferButton">Enviar Transferência</button>
            </div>

            <!-- Seção de pagamentos -->
            <div id="paymentsSection" class="hidden">
                <h2>Pagamentos</h2>
                <input type="text" id="paymentCode" placeholder="Código de barras do boleto" required>
                <input type="number" id="paymentAmount" placeholder="Valor do pagamento" required>
                <button id="payBillButton">Pagar Boleto</button>
            </div>

            <!-- Seção de Chat -->
            <div id="chatSection" class="hidden">
                <h2>Fale Conosco</h2>
                <textarea id="chatMessage" rows="4" placeholder="Digite sua mensagem"></textarea>
                <button id="sendMessageButton">Enviar Mensagem</button>
            </div>

            <!-- Seção de Ajuda -->
            <div id="helpSection" class="hidden">
                <h2>Central de Ajuda</h2>
                <p>Escolha uma das opções abaixo para saber mais:</p>
                <ul>
                    <li><strong>Como realizar transferências?</strong></li>
                    <li><strong>Investimentos - Perguntas Frequentes</strong></li>
                    <li><strong>Como pagar boletos?</strong></li>
                    <li><strong>Suporte técnico</strong></li>
                </ul>
            </div>
        </div>
    </div>

    <script>
        // Função para gerar números aleatórios
        function gerarNumeroAleatorio(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        // Função para obter a data e hora atual
        function obterDataHoraAtual() {
            const agora = new Date();
            const dia = String(agora.getDate()).padStart(2, '0');
            const mes = String(agora.getMonth() + 1).padStart(2, '0');
            const ano = agora.getFullYear();
            const horas = String(agora.getHours()).padStart(2, '0');
            const minutos = String(agora.getMinutes()).padStart(2, '0');
            const segundos = String(agora.getSeconds()).padStart(2, '0');
            return `${dia}/${mes}/${ano} ${horas}:${minutos}:${segundos}`;
        }

        // Exibir uma seção específica
        function showSection(sectionId) {
            const sections = ['registerSection', 'loginSection', 'bankSection', 'extratoSection', 'profileSection', 'investmentSection', 'transferSection', 'paymentsSection', 'chatSection', 'helpSection'];
            sections.forEach(section => document.getElementById(section).classList.add('hidden'));
            document.getElementById(sectionId).classList.remove('hidden');
        }

        // Armazenamento e recuperação de usuários
        function salvarUsuario(user) {
            localStorage.setItem(user.cpf, JSON.stringify(user));
        }

        function obterUsuario(cpf) {
            return JSON.parse(localStorage.getItem(cpf));
        }

        // Atualizar saldo e barra de progresso
        function atualizarTela(user) {
            document.getElementById('userName').textContent = user.name;
            document.getElementById('userAgencia').textContent = user.agencia;
            document.getElementById('userConta').textContent = user.conta;
            document.getElementById('userSaldo').textContent = user.saldo.toFixed(2);

            const progressBar = document.getElementById('progress');
            const saldoMax = 10000; // Exemplo de saldo máximo
            const porcentagem = (user.saldo / saldoMax) * 100;
            progressBar.style.width = `${Math.min(porcentagem, 100)}%`;
        }

        // Exibir notificação temporária
        function exibirNotificacao(mensagem) {
            const notificacao = document.createElement('div');
            notificacao.classList.add('notification');
            notificacao.textContent = mensagem;
            document.body.appendChild(notificacao);
            setTimeout(() => notificacao.remove(), 3000);
        }

        // Eventos de navegação no menu lateral
        document.getElementById('goToRegister').addEventListener('click', () => showSection('registerSection'));
        document.getElementById('goToLogin').addEventListener('click', () => showSection('loginSection'));
        document.getElementById('goToBank').addEventListener('click', () => showSection('bankSection'));
        document.getElementById('goToProfile').addEventListener('click', () => showSection('profileSection'));
        document.getElementById('goToInvestments').addEventListener('click', () => showSection('investmentSection'));
        document.getElementById('goToTransfers').addEventListener('click', () => showSection('transferSection'));
        document.getElementById('goToPayments').addEventListener('click', () => showSection('paymentsSection'));
        document.getElementById('goToExtrato').addEventListener('click', () => showSection('extratoSection'));
        document.getElementById('goToChat').addEventListener('click', () => showSection('chatSection'));
        document.getElementById('goToHelp').addEventListener('click', () => showSection('helpSection'));

        // Evento de Cadastro
        document.getElementById('registerUser').addEventListener('click', () => {
            const name = document.getElementById('registerName').value;
            const cpf = document.getElementById('registerCpf').value;
            const password = document.getElementById('registerPassword').value;

            if (name && cpf && password) {
                const agencia = gerarNumeroAleatorio(1000, 9999);
                const conta = gerarNumeroAleatorio(10000, 99999);
                const saldo = 1000; // Saldo inicial

                const user = { name, cpf, password, agencia, conta, saldo, extrato: [] };

                salvarUsuario(user);
                alert('Cadastro realizado com sucesso!');
                showSection('loginSection');
            } else {
                alert('Preencha todos os campos.');
            }
        });

        // Evento de Login
        document.getElementById('loginUser').addEventListener('click', () => {
            const cpf = document.getElementById('loginCpf').value;
            const password = document.getElementById('loginPassword').value;

            const user = obterUsuario(cpf);

            if (user && user.password === password) {
                atualizarTela(user);
                showSection('bankSection');
            } else {
                alert('CPF ou senha incorretos.');
            }
        });

        // Depósito
        document.getElementById('depositButton').addEventListener('click', () => {
            const valor = parseFloat(prompt('Informe o valor do depósito:'));
            const cpf = document.getElementById('loginCpf').value;
            const user = obterUsuario(cpf);

            if (valor > 0) {
                user.saldo += valor;
                user.extrato.push({ tipo: 'Depósito', valor, dataHora: obterDataHoraAtual() });
                salvarUsuario(user);
                atualizarTela(user);
                exibirNotificacao('Depósito realizado com sucesso!');
            } else {
                alert('Valor inválido.');
            }
        });

        // PIX
        document.getElementById('pixButton').addEventListener('click', () => showSection('transferSection'));

        document.getElementById('sendTransferButton').addEventListener('click', () => {
            const destinatarioCpf = document.getElementById('transferCpf').value;
            const valor = parseFloat(document.getElementById('transferValor').value);
            const userCpf = document.getElementById('loginCpf').value;

            const user = obterUsuario(userCpf);
            const destinatario = obterUsuario(destinatarioCpf);

            if (destinatario && valor > 0 && valor <= user.saldo) {
                user.saldo -= valor;
                destinatario.saldo += valor;
                user.extrato.push({ tipo: 'Transferência enviada', valor, dataHora: obterDataHoraAtual() });
                destinatario.extrato.push({ tipo: 'Transferência recebida', valor, dataHora: obterDataHoraAtual() });

                salvarUsuario(user);
                salvarUsuario(destinatario);
                atualizarTela(user);
                exibirNotificacao('Transferência realizada com sucesso!');
            } else {
                alert('Erro na transferência. Verifique o CPF do destinatário ou o saldo.');
            }
        });

        // Pagamento de boletos
        document.getElementById('payBillButton').addEventListener('click', () => {
            const codigo = document.getElementById('paymentCode').value;
            const valor = parseFloat(document.getElementById('paymentAmount').value);
            const cpf = document.getElementById('loginCpf').value;
            const user = obterUsuario(cpf);

            if (valor > 0 && codigo) {
                user.saldo -= valor;
                user.extrato.push({ tipo: 'Pagamento de Boleto', valor, dataHora: obterDataHoraAtual() });
                salvarUsuario(user);
                atualizarTela(user);
                exibirNotificacao('Boleto pago com sucesso!');

            } else {
                alert('Erro no pagamento. Verifique o código do boleto e o saldo.');
            }
        });

        // Ver Extrato
        document.getElementById('goToExtrato').addEventListener('click', () => {
            const cpf = document.getElementById('loginCpf').value;
            const user = obterUsuario(cpf);

            const extratoList = document.getElementById('extratoList');
            extratoList.innerHTML = '';

            user.extrato.forEach(item => {
                const extratoItem = document.createElement('div');
                extratoItem.classList.add('extrato-item');
                extratoItem.innerHTML = `
                    <p><strong>Tipo:</strong> ${item.tipo}</p>
                    <p><strong>Valor:</strong> R$ ${item.valor.toFixed(2)}</p>
                    <p><strong>Data e Hora:</strong> ${item.dataHora}</p>
                `;
                extratoList.appendChild(extratoItem);
            });

            showSection('extratoSection');
        });

        // Investimentos
        let totalInvestido = 0;

        document.getElementById('investmentButton').addEventListener('click', () => {
            document.getElementById('totalInvestidoDisplay').textContent = totalInvestido.toFixed(2);
            showSection('investmentSection');
        });

        document.getElementById('investButton').addEventListener('click', () => {
            const cpf = document.getElementById('loginCpf').value;
            const user = obterUsuario(cpf);
            const tipoInvestimento = document.getElementById('investmentType').value;
            const valor = parseFloat(document.getElementById('investmentAmount').value);

            if (valor > 0 && valor <= user.saldo) {
                user.saldo -= valor;
                totalInvestido += valor; // Atualizando o total investido
                user.extrato.push({ tipo: `Investimento em ${tipoInvestimento.toUpperCase()}`, valor, dataHora: obterDataHoraAtual() });
                salvarUsuario(user);
                atualizarTela(user);
                exibirNotificacao('Investimento realizado com sucesso!');

                document.getElementById('investmentSummary').innerText = `Você investiu R$ ${valor.toFixed(2)}. Saldo restante: R$ ${(user.saldo).toFixed(2)}. Total Investido: R$ ${totalInvestido.toFixed(2)}`;
            } else {
                alert('Saldo insuficiente ou valor inválido.');
            }
        });

        // Chat
        document.getElementById('sendMessageButton').addEventListener('click', () => {
            const message = document.getElementById('chatMessage').value;
            if (message.trim()) {
                alert('Mensagem enviada com sucesso: ' + message);
                document.getElementById('chatMessage').value = '';
            } else {
                alert('Digite uma mensagem antes de enviar.');
            }
        });

        // Logout
        document.getElementById('logoutButton').addEventListener('click', () => {
            showSection('loginSection');
            document.getElementById('loginCpf').value = '';
            document.getElementById('loginPassword').value = '';
        });
    </script>
</body>
</html>
